#!/usr/bin/env ruby
require 'fileutils'
require 'yaml'

name = ARGV[0]

if name.nil? or name.empty?
  puts '[ThunderCat] Error you must supply a target directory containing an existing thundercat installation'
else

  begin
    target_dir = "#{name}"

    rap_file = File.open(target_dir + '/webapps/thundercat/rap.yml')
    existing_version = YAML::load(rap_file)[:version]

    if existing_version < "0.0.256"
      # create standalone and standalone_archive directories
      FileUtils.mkpath("#{target_dir}/standalone") unless File.exists?("#{target_dir}/standalone")
      FileUtils.mkpath("#{target_dir}/standalone_archive") unless File.exists?("#{target_dir}/standalone_archive")
      rap = File.dirname(File.expand_path(__FILE__)) + '/../src/rap/thundercat.rap'
      monitor = File.dirname(File.expand_path(__FILE__)) + '/../src/monitor/monitor.rb'

      # remove old monitor and replace with new monitor
      FileUtils.rm_rf("#{target_dir}/monitor.rb") if File.exists?("#{target_dir}/monitor.rb")
      FileUtils.cp(monitor, target_dir)

      # drop in new thundercat rap
      FileUtils.cp(rap, "#{target_dir}/webapps")
    end

    if existing_version > "0.0.256" and existing_version < "0.0.261"
      # create standalone new files
      rap = File.dirname(File.expand_path(__FILE__)) + '/../src/rap/thundercat.rap'
      monitor = File.dirname(File.expand_path(__FILE__)) + '/../src/monitor/monitor.rb'
      standalone = File.dirname(File.expand_path(__FILE__)) + '/../src/monitor/standalone.rb'
      standalone_start_script = File.dirname(File.expand_path(__FILE__)) + '/../src/monitor/start_standalone.sh'
      standalone_stop_script = File.dirname(File.expand_path(__FILE__)) + '/../src/monitor/stop_standalone.sh'

      # remove old monitor and replace with new monitor
      FileUtils.rm_rf("#{target_dir}/monitor.rb") if File.exists?("#{target_dir}/monitor.rb")
      FileUtils.cp(monitor, target_dir)

      # copy in new standalone scripts
      FileUtils.cp(standalone, target_dir)
      FileUtils.cp(standalone_start_script, target_dir)
      FileUtils.cp(standalone_stop_script, target_dir)

      # drop in new thundercat rap
      FileUtils.cp(rap, "#{target_dir}/webapps")
    end

    puts "[ThunderCat] Successfully updated ThunderCat at: #{target_dir}"

  rescue => e
    puts "[ThunderCat] OOps something went wrong: #{e}"
  end
end


